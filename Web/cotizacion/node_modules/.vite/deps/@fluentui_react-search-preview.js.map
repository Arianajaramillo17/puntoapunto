{
  "version": 3,
  "sources": ["../../@fluentui/react-search-preview/lib/components/SearchBox/SearchBox.js", "../../@fluentui/react-search-preview/lib/components/SearchBox/useSearchBox.js", "../../@fluentui/react-search-preview/lib/components/SearchBox/renderSearchBox.js", "../../@fluentui/react-search-preview/lib/components/SearchBox/useSearchBoxStyles.styles.js", "../../@fluentui/react-search-preview/lib/components/SearchBox/SearchBox.types.js"],
  "sourcesContent": ["import * as React from 'react';\nimport { useSearchBox_unstable } from './useSearchBox';\nimport { renderSearchBox_unstable } from './renderSearchBox';\nimport { useSearchBoxStyles_unstable } from './useSearchBoxStyles.styles';\n/**\n * SearchBox component - TODO: add more docs\n */ export const SearchBox = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useSearchBox_unstable(props, ref);\n    useSearchBoxStyles_unstable(state);\n    return renderSearchBox_unstable(state);\n});\nSearchBox.displayName = 'SearchBox';\n", "import * as React from 'react';\nimport { isResolvedShorthand, mergeCallbacks, slot, useControllableState, useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport { useInput_unstable } from '@fluentui/react-input';\nimport { DismissRegular, SearchRegular } from '@fluentui/react-icons';\n/**\n * Create the state required to render SearchBox.\n *\n * The returned state can be modified with hooks such as useSearchBoxStyles_unstable,\n * before being passed to renderSearchBox_unstable.\n *\n * @param props - props from this instance of SearchBox\n * @param ref - reference to root HTMLElement of SearchBox\n */ export const useSearchBox_unstable = (props, ref)=>{\n    const { size = 'medium', disabled = false, root, contentBefore, dismiss, contentAfter, ...inputProps } = props;\n    const searchBoxRootRef = React.useRef(null);\n    const searchBoxRef = React.useRef(null);\n    const [value, setValue] = useControllableState({\n        state: props.value,\n        defaultState: props.defaultValue,\n        initialState: ''\n    });\n    // Tracks the focus of the component for the contentAfter and dismiss button\n    const [focused, setFocused] = React.useState(false);\n    const onFocus = useEventCallback(()=>{\n        setFocused(true);\n    });\n    const onBlur = useEventCallback((ev)=>{\n        var _searchBoxRootRef_current;\n        setFocused(!!((_searchBoxRootRef_current = searchBoxRootRef.current) === null || _searchBoxRootRef_current === void 0 ? void 0 : _searchBoxRootRef_current.contains(ev.relatedTarget)));\n    });\n    const rootProps = slot.resolveShorthand(root);\n    const handleDismissClick = useEventCallback((event)=>{\n        var _props_onChange;\n        if (isResolvedShorthand(dismiss)) {\n            var _dismiss_onClick;\n            (_dismiss_onClick = dismiss.onClick) === null || _dismiss_onClick === void 0 ? void 0 : _dismiss_onClick.call(dismiss, event);\n        }\n        const newValue = '';\n        setValue(newValue);\n        (_props_onChange = props.onChange) === null || _props_onChange === void 0 ? void 0 : _props_onChange.call(props, event, {\n            value: newValue\n        });\n    });\n    const inputState = useInput_unstable({\n        type: 'search',\n        disabled,\n        size,\n        value,\n        root: slot.always({\n            ...rootProps,\n            ref: useMergedRefs(rootProps === null || rootProps === void 0 ? void 0 : rootProps.ref, searchBoxRootRef),\n            onFocus: useEventCallback(mergeCallbacks(rootProps === null || rootProps === void 0 ? void 0 : rootProps.onFocus, onFocus)),\n            onBlur: useEventCallback(mergeCallbacks(rootProps === null || rootProps === void 0 ? void 0 : rootProps.onBlur, onBlur))\n        }, {\n            elementType: 'span'\n        }),\n        contentBefore: slot.optional(contentBefore, {\n            renderByDefault: true,\n            defaultProps: {\n                children: /*#__PURE__*/ React.createElement(SearchRegular, null)\n            },\n            elementType: 'span'\n        }),\n        contentAfter: slot.optional(contentAfter, {\n            renderByDefault: true,\n            elementType: 'span'\n        }),\n        ...inputProps,\n        onChange: useEventCallback((ev)=>{\n            var _props_onChange;\n            const newValue = ev.target.value;\n            (_props_onChange = props.onChange) === null || _props_onChange === void 0 ? void 0 : _props_onChange.call(props, ev, {\n                value: newValue\n            });\n            setValue(newValue);\n        })\n    }, useMergedRefs(searchBoxRef, ref));\n    const state = {\n        ...inputState,\n        components: {\n            ...inputState.components,\n            dismiss: 'span'\n        },\n        dismiss: slot.optional(dismiss, {\n            defaultProps: {\n                children: /*#__PURE__*/ React.createElement(DismissRegular, null),\n                role: 'button',\n                'aria-label': 'clear',\n                tabIndex: -1\n            },\n            renderByDefault: true,\n            elementType: 'span'\n        }),\n        disabled,\n        focused,\n        size\n    };\n    if (state.dismiss) {\n        state.dismiss.onClick = handleDismissClick;\n    }\n    return state;\n};\n", "  import { jsx as _jsx, jsxs as _jsxs } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\n/**\n * Render the final JSX of SearchBox\n */ export const renderSearchBox_unstable = (state)=>{\n    assertSlots(state);\n    return /*#__PURE__*/ _jsxs(state.root, {\n        children: [\n            state.contentBefore && /*#__PURE__*/ _jsx(state.contentBefore, {}),\n            /*#__PURE__*/ _jsx(state.input, {}),\n            state.contentAfter && /*#__PURE__*/ _jsxs(state.contentAfter, {\n                children: [\n                    state.contentAfter.children,\n                    state.dismiss && /*#__PURE__*/ _jsx(state.dismiss, {})\n                ]\n            })\n        ]\n    });\n};\n", "import { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport { useInputStyles_unstable } from '@fluentui/react-input';\nexport const searchBoxClassNames = {\n    root: 'fui-SearchBox',\n    dismiss: 'fui-SearchBox__dismiss',\n    contentAfter: 'fui-SearchBox__contentAfter',\n    contentBefore: 'fui-SearchBox__contentBefore',\n    input: 'fui-SearchBox__input'\n};\n/**\n * Styles for the root slot\n */ const useRootStyles = makeStyles({\n    small: {\n        columnGap: 0,\n        maxWidth: '468px',\n        paddingLeft: tokens.spacingHorizontalSNudge,\n        paddingRight: tokens.spacingHorizontalSNudge\n    },\n    medium: {\n        columnGap: 0,\n        maxWidth: '468px',\n        paddingLeft: tokens.spacingHorizontalS,\n        paddingRight: tokens.spacingHorizontalS\n    },\n    large: {\n        columnGap: 0,\n        maxWidth: '468px',\n        paddingLeft: tokens.spacingHorizontalMNudge,\n        paddingRight: tokens.spacingHorizontalMNudge\n    },\n    input: {\n        paddingLeft: tokens.spacingHorizontalSNudge,\n        paddingRight: 0,\n        // removes the WebKit pseudoelement styling\n        '::-webkit-search-decoration': {\n            display: 'none'\n        },\n        '::-webkit-search-cancel-button': {\n            display: 'none'\n        }\n    }\n});\nconst useContentAfterStyles = makeStyles({\n    contentAfter: {\n        paddingLeft: tokens.spacingHorizontalM,\n        columnGap: tokens.spacingHorizontalXS\n    },\n    rest: {\n        opacity: 0,\n        height: 0,\n        width: 0\n    }\n});\nconst useDismissClassName = makeResetStyles({\n    boxSizing: 'border-box',\n    color: tokens.colorNeutralForeground3,\n    display: 'flex',\n    // special case styling for icons (most common case) to ensure they're centered vertically\n    // size: medium (default)\n    '> svg': {\n        fontSize: '20px'\n    },\n    cursor: 'pointer'\n});\nconst useDismissStyles = makeStyles({\n    disabled: {\n        color: tokens.colorNeutralForegroundDisabled\n    },\n    // Ensure resizable icons show up with the proper font size\n    small: {\n        '> svg': {\n            fontSize: '16px'\n        }\n    },\n    medium: {\n    },\n    large: {\n        '> svg': {\n            fontSize: '24px'\n        }\n    }\n});\n/**\n * Apply styling to the SearchBox slots based on the state\n */ export const useSearchBoxStyles_unstable = (state)=>{\n    const { disabled, focused, size } = state;\n    const rootStyles = useRootStyles();\n    const contentAfterStyles = useContentAfterStyles();\n    const dismissClassName = useDismissClassName();\n    const dismissStyles = useDismissStyles();\n    state.root.className = mergeClasses(searchBoxClassNames.root, rootStyles[size], state.root.className);\n    state.input.className = mergeClasses(searchBoxClassNames.input, rootStyles.input, state.input.className);\n    if (state.dismiss) {\n        state.dismiss.className = mergeClasses(searchBoxClassNames.dismiss, dismissClassName, disabled && dismissStyles.disabled, dismissStyles[size], state.dismiss.className);\n    }\n    if (state.contentBefore) {\n        state.contentBefore.className = mergeClasses(searchBoxClassNames.contentBefore, state.contentBefore.className);\n    }\n    if (state.contentAfter) {\n        state.contentAfter.className = mergeClasses(searchBoxClassNames.contentAfter, contentAfterStyles.contentAfter, !focused && contentAfterStyles.rest, state.contentAfter.className);\n    } else if (state.dismiss) {\n        state.dismiss.className = mergeClasses(state.dismiss.className, contentAfterStyles.contentAfter);\n    }\n    useInputStyles_unstable(state);\n    return state;\n};\n", "import * as React from 'react';\n"],
  "mappings": "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",
  "names": ["React", "searchBoxClassNames", "root", "dismiss", "contentAfter", "contentBefore", "input", "useRootStyles", "__styles", "small", "i8kkvl", "B2u0y6b", "uwmqm3", "z189sj", "medium", "large", "Boqhc8c", "B8uat0v", "d", "useContentAfterStyles", "rest", "abs64n", "Bqenvij", "a9b677", "useDismissClassName", "__resetStyles", "useDismissStyles", "disabled", "sj55zd", "kwki1k", "useSearchBoxStyles_unstable", "state", "focused", "size", "rootStyles", "contentAfterStyles", "dismissClassName", "dismissStyles", "className", "mergeClasses", "useInputStyles_unstable", "React"]
}
