import {
  assertSlots,
  isResolvedShorthand,
  jsx,
  jsxs,
  mergeCallbacks,
  slot_exports,
  useControllableState,
  useEventCallback,
  useInputStyles_unstable,
  useInput_unstable,
  useMergedRefs
} from "./chunk-FPS7XC2E.js";
import "./chunk-UIXNP3X2.js";
import {
  DismissRegular,
  SearchRegular,
  __resetStyles,
  __styles2 as __styles,
  mergeClasses
} from "./chunk-NUQFYF7I.js";
import {
  __toESM,
  require_react
} from "./chunk-7IZM36HO.js";

// node_modules/@fluentui/react-search-preview/lib/components/SearchBox/SearchBox.js
var React2 = __toESM(require_react());

// node_modules/@fluentui/react-search-preview/lib/components/SearchBox/useSearchBox.js
var React = __toESM(require_react());
var useSearchBox_unstable = (props, ref) => {
  const { size = "medium", disabled = false, root, contentBefore, dismiss, contentAfter, ...inputProps } = props;
  const searchBoxRootRef = React.useRef(null);
  const searchBoxRef = React.useRef(null);
  const [value, setValue] = useControllableState({
    state: props.value,
    defaultState: props.defaultValue,
    initialState: ""
  });
  const [focused, setFocused] = React.useState(false);
  const onFocus = useEventCallback(() => {
    setFocused(true);
  });
  const onBlur = useEventCallback((ev) => {
    var _searchBoxRootRef_current;
    setFocused(!!((_searchBoxRootRef_current = searchBoxRootRef.current) === null || _searchBoxRootRef_current === void 0 ? void 0 : _searchBoxRootRef_current.contains(ev.relatedTarget)));
  });
  const rootProps = slot_exports.resolveShorthand(root);
  const handleDismissClick = useEventCallback((event) => {
    var _props_onChange;
    if (isResolvedShorthand(dismiss)) {
      var _dismiss_onClick;
      (_dismiss_onClick = dismiss.onClick) === null || _dismiss_onClick === void 0 ? void 0 : _dismiss_onClick.call(dismiss, event);
    }
    const newValue = "";
    setValue(newValue);
    (_props_onChange = props.onChange) === null || _props_onChange === void 0 ? void 0 : _props_onChange.call(props, event, {
      value: newValue
    });
  });
  const inputState = useInput_unstable({
    type: "search",
    disabled,
    size,
    value,
    root: slot_exports.always({
      ...rootProps,
      ref: useMergedRefs(rootProps === null || rootProps === void 0 ? void 0 : rootProps.ref, searchBoxRootRef),
      onFocus: useEventCallback(mergeCallbacks(rootProps === null || rootProps === void 0 ? void 0 : rootProps.onFocus, onFocus)),
      onBlur: useEventCallback(mergeCallbacks(rootProps === null || rootProps === void 0 ? void 0 : rootProps.onBlur, onBlur))
    }, {
      elementType: "span"
    }),
    contentBefore: slot_exports.optional(contentBefore, {
      renderByDefault: true,
      defaultProps: {
        children: React.createElement(SearchRegular, null)
      },
      elementType: "span"
    }),
    contentAfter: slot_exports.optional(contentAfter, {
      renderByDefault: true,
      elementType: "span"
    }),
    ...inputProps,
    onChange: useEventCallback((ev) => {
      var _props_onChange;
      const newValue = ev.target.value;
      (_props_onChange = props.onChange) === null || _props_onChange === void 0 ? void 0 : _props_onChange.call(props, ev, {
        value: newValue
      });
      setValue(newValue);
    })
  }, useMergedRefs(searchBoxRef, ref));
  const state = {
    ...inputState,
    components: {
      ...inputState.components,
      dismiss: "span"
    },
    dismiss: slot_exports.optional(dismiss, {
      defaultProps: {
        children: React.createElement(DismissRegular, null),
        role: "button",
        "aria-label": "clear",
        tabIndex: -1
      },
      renderByDefault: true,
      elementType: "span"
    }),
    disabled,
    focused,
    size
  };
  if (state.dismiss) {
    state.dismiss.onClick = handleDismissClick;
  }
  return state;
};

// node_modules/@fluentui/react-search-preview/lib/components/SearchBox/renderSearchBox.js
var renderSearchBox_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.contentBefore && jsx(state.contentBefore, {}),
      jsx(state.input, {}),
      state.contentAfter && jsxs(state.contentAfter, {
        children: [
          state.contentAfter.children,
          state.dismiss && jsx(state.dismiss, {})
        ]
      })
    ]
  });
};

// node_modules/@fluentui/react-search-preview/lib/components/SearchBox/useSearchBoxStyles.styles.js
var searchBoxClassNames = {
  root: "fui-SearchBox",
  dismiss: "fui-SearchBox__dismiss",
  contentAfter: "fui-SearchBox__contentAfter",
  contentBefore: "fui-SearchBox__contentBefore",
  input: "fui-SearchBox__input"
};
var useRootStyles = __styles({
  small: {
    i8kkvl: "fjuset5",
    B2u0y6b: "f1xzfw5u",
    uwmqm3: ["fk8j09s", "fdw0yi8"],
    z189sj: ["fdw0yi8", "fk8j09s"]
  },
  medium: {
    i8kkvl: "fjuset5",
    B2u0y6b: "f1xzfw5u",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"],
    z189sj: ["f1vdfbxk", "f1f5gg8d"]
  },
  large: {
    i8kkvl: "fjuset5",
    B2u0y6b: "f1xzfw5u",
    uwmqm3: ["f1ng84yb", "f11gcy0p"],
    z189sj: ["f11gcy0p", "f1ng84yb"]
  },
  input: {
    uwmqm3: ["fk8j09s", "fdw0yi8"],
    z189sj: ["fhxju0i", "f1cnd47f"],
    Boqhc8c: "f18izjht",
    B8uat0v: "fcoa6sg"
  }
}, {
  d: [".fjuset5{column-gap:0;}", ".f1xzfw5u{max-width:468px;}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1ng84yb{padding-left:var(--spacingHorizontalMNudge);}", ".f11gcy0p{padding-right:var(--spacingHorizontalMNudge);}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f18izjht::-webkit-search-decoration{display:none;}", ".fcoa6sg::-webkit-search-cancel-button{display:none;}"]
});
var useContentAfterStyles = __styles({
  contentAfter: {
    uwmqm3: ["f1uw59to", "fw5db7e"],
    i8kkvl: "f1ufnopg"
  },
  rest: {
    abs64n: "fk73vx1",
    Bqenvij: "fniina8",
    a9b677: "f3tsq5r"
  }
}, {
  d: [".f1uw59to{padding-left:var(--spacingHorizontalM);}", ".fw5db7e{padding-right:var(--spacingHorizontalM);}", ".f1ufnopg{column-gap:var(--spacingHorizontalXS);}", ".fk73vx1{opacity:0;}", ".fniina8{height:0;}", ".f3tsq5r{width:0;}"]
});
var useDismissClassName = __resetStyles("r1pvzcuu", null, [".r1pvzcuu{box-sizing:border-box;color:var(--colorNeutralForeground3);display:flex;cursor:pointer;}", ".r1pvzcuu>svg{font-size:20px;}"]);
var useDismissStyles = __styles({
  disabled: {
    sj55zd: "f1s2aq7o"
  },
  small: {
    kwki1k: "f3u2cy0"
  },
  medium: {},
  large: {
    kwki1k: "fa420co"
  }
}, {
  d: [".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f3u2cy0>svg{font-size:16px;}", ".fa420co>svg{font-size:24px;}"]
});
var useSearchBoxStyles_unstable = (state) => {
  const {
    disabled,
    focused,
    size
  } = state;
  const rootStyles = useRootStyles();
  const contentAfterStyles = useContentAfterStyles();
  const dismissClassName = useDismissClassName();
  const dismissStyles = useDismissStyles();
  state.root.className = mergeClasses(searchBoxClassNames.root, rootStyles[size], state.root.className);
  state.input.className = mergeClasses(searchBoxClassNames.input, rootStyles.input, state.input.className);
  if (state.dismiss) {
    state.dismiss.className = mergeClasses(searchBoxClassNames.dismiss, dismissClassName, disabled && dismissStyles.disabled, dismissStyles[size], state.dismiss.className);
  }
  if (state.contentBefore) {
    state.contentBefore.className = mergeClasses(searchBoxClassNames.contentBefore, state.contentBefore.className);
  }
  if (state.contentAfter) {
    state.contentAfter.className = mergeClasses(searchBoxClassNames.contentAfter, contentAfterStyles.contentAfter, !focused && contentAfterStyles.rest, state.contentAfter.className);
  } else if (state.dismiss) {
    state.dismiss.className = mergeClasses(state.dismiss.className, contentAfterStyles.contentAfter);
  }
  useInputStyles_unstable(state);
  return state;
};

// node_modules/@fluentui/react-search-preview/lib/components/SearchBox/SearchBox.js
var SearchBox = React2.forwardRef((props, ref) => {
  const state = useSearchBox_unstable(props, ref);
  useSearchBoxStyles_unstable(state);
  return renderSearchBox_unstable(state);
});
SearchBox.displayName = "SearchBox";

// node_modules/@fluentui/react-search-preview/lib/components/SearchBox/SearchBox.types.js
var React3 = __toESM(require_react());
export {
  SearchBox,
  renderSearchBox_unstable,
  searchBoxClassNames,
  useSearchBoxStyles_unstable,
  useSearchBox_unstable
};
//# sourceMappingURL=@fluentui_react-search-preview.js.map
