// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Service.Cotizacion.Infrastructure;

#nullable disable

namespace Service.Cotizacion.Infrastructure.Migrations
{
    [DbContext(typeof(CotizacionDbContext))]
    [Migration("20240308024049_Initial0.0.1")]
    partial class Initial001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cotiza")
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Service.Cotizacion.Core.Entities.Cotizacion", b =>
                {
                    b.Property<Guid>("CotizacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EstadoCotizacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("CotizacionId");

                    b.HasIndex("EstadoCotizacionId");

                    b.ToTable("Cotizaciones", "cotiza");
                });

            modelBuilder.Entity("Service.Cotizacion.Core.Entities.CotizacionDetalle", b =>
                {
                    b.Property<Guid>("CotizacionDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CotizacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MaterialPrimarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("CotizacionDetalleId");

                    b.HasIndex("CotizacionId");

                    b.HasIndex("MaterialPrimarioId");

                    b.ToTable("CotizacionesDetalles", "cotiza");
                });

            modelBuilder.Entity("Service.Cotizacion.Core.Entities.EstadoCotizacion", b =>
                {
                    b.Property<Guid>("EstadoCotizacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoCotizacionId");

                    b.ToTable("EstadosCotizaciones", "cotiza");
                });

            modelBuilder.Entity("Service.Cotizacion.Core.Entities.MaterialPrimario", b =>
                {
                    b.Property<Guid>("MaterialPrimarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<Guid>("TipoMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MaterialPrimarioId");

                    b.HasIndex("TipoMaterialId");

                    b.ToTable("MaterialesPrimarios", "cotiza");
                });

            modelBuilder.Entity("Service.Cotizacion.Core.Entities.TipoMaterial", b =>
                {
                    b.Property<Guid>("TipoMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoMaterialId");

                    b.ToTable("TiposMateriales", "cotiza");
                });

            modelBuilder.Entity("Service.Cotizacion.Core.Entities.Cotizacion", b =>
                {
                    b.HasOne("Service.Cotizacion.Core.Entities.EstadoCotizacion", "EstadoCotizacion")
                        .WithMany("Cotizaciones")
                        .HasForeignKey("EstadoCotizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoCotizacion");
                });

            modelBuilder.Entity("Service.Cotizacion.Core.Entities.CotizacionDetalle", b =>
                {
                    b.HasOne("Service.Cotizacion.Core.Entities.Cotizacion", "Cotizacion")
                        .WithMany()
                        .HasForeignKey("CotizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Cotizacion.Core.Entities.MaterialPrimario", "MaterialPrimario")
                        .WithMany("CotizacionDetalles")
                        .HasForeignKey("MaterialPrimarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotizacion");

                    b.Navigation("MaterialPrimario");
                });

            modelBuilder.Entity("Service.Cotizacion.Core.Entities.MaterialPrimario", b =>
                {
                    b.HasOne("Service.Cotizacion.Core.Entities.TipoMaterial", "TipoMaterial")
                        .WithMany("Materiales")
                        .HasForeignKey("TipoMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMaterial");
                });

            modelBuilder.Entity("Service.Cotizacion.Core.Entities.EstadoCotizacion", b =>
                {
                    b.Navigation("Cotizaciones");
                });

            modelBuilder.Entity("Service.Cotizacion.Core.Entities.MaterialPrimario", b =>
                {
                    b.Navigation("CotizacionDetalles");
                });

            modelBuilder.Entity("Service.Cotizacion.Core.Entities.TipoMaterial", b =>
                {
                    b.Navigation("Materiales");
                });
#pragma warning restore 612, 618
        }
    }
}
